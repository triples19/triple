module;
#include <algorithm>
#include <array>
#include <type_traits>

export module triple.base:utility;

namespace triple {

export constexpr struct InPlace {
} in_place;

export template<class T, typename... Ts>
consteval std::size_t index_in_args() {
    constexpr std::array<bool, sizeof...(Ts)> a {{std::is_same<T, Ts>::value...}
    };
    const auto it = std::find(a.begin(), a.end(), true);
    return std::distance(a.begin(), it);
}

} // namespace triple
